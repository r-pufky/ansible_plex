---
- name: 'Auto disabled | verify'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Auto disabled | verify | gather service status'
      ansible.builtin.service_facts:

    # Just confirm services, timers are working/active (r_pufky.deb.systemd)
    - name: 'Auto disabled | verify | assert plexmediaserver.service active'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"plexmediaserver.service" in ansible_facts.services'
          - 'ansible_facts["services"]["plexmediaserver.service"]["state"] == "running"'  # yamllint disable-line rule:line-length
        fail_msg: '✘ plexmediaserver.service should be enabled and running.'

    - name: >
        Default | verify |
        /etc/systemd/system/plexmediaserver.service.d/override.conf
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'copy.yml'
      vars:
        test_name: >
          Default | verify |
          /etc/systemd/system/plexmediaserver.service.d/override.conf
        test_src: 'files/override.conf'
        test_file:
          '/etc/systemd/system/plexmediaserver.service.d/override.conf'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0644'

    - name: 'Auto disabled | verify | assert plex-update.service absent'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"plex-update.service" not in ansible_facts.services'
        fail_msg: '✘ plex-update.service should be removed.'

    - name: 'Auto disabled | verify | /etc/systemd/system/plex-update.timer'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name:
          'Auto disabled | verify | /etc/systemd/system/plex-update.timer'
        test_file: '/etc/systemd/system/plex-update.timer'
        test_owner: '{{ omit }}'
        test_group: '{{ omit }}'
        test_mode: '{{ omit }}'
        test_state: 'absent'

    - name: >
        Auto disabled | verify | /var
        /lib/plexmediaserver/Library/Application
        Support/Plex Media Server/plexupdate
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'file.yml'
      vars:
        test_name: >
          Auto disabled | verify | /var
          /lib/plexmediaserver/Library/Application
          Support/Plex Media Server/plexupdate
        test_file: >
          Auto disabled | verify | /var
          /lib/plexmediaserver/Library/Application
          Support/Plex Media Server/plexupdate
        test_owner: '{{ omit }}'
        test_group: '{{ omit }}'
        test_mode: '{{ omit }}'
        test_state: 'absent'

    - name: 'Auto disabled | verify | query user plex'
      ansible.builtin.getent:
        database: 'passwd'
        key: 'plex'
      register: _test_plex_user

    - name: 'Auto disabled | verify | assert user plex exists'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"plex" in ansible_facts.getent_passwd'
        fail_msg: '✘ plex user should exist {{ ansible_facts.getent_passwd }}.'

    - name: 'Auto disabled | verify | query current plex configuration'
      community.general.xml:
        path: >
          /var/lib/plexmediaserver/Library/Application
          Support/Plex Media Server/Preferences.xml
        content: 'attribute'
        xpath: '/Preferences'
      register: _plex_xml_raw

    - name: 'Auto disabled | verify | parse current plex configuration'
      ansible.builtin.set_fact:
        _plex_xml: '{{ _plex_xml_raw.matches[0].Preferences }}'

    - name: 'Auto disabled | verify | DB auto grow size'
      ansible.builtin.assert:
        quiet: true
        that:
          - _plex_xml.DatabaseCacheSize == '40'
        fail_msg: >
          ✘ DatabaseCacheSize should be exactly 40
          ({{ _plex_xml.DatabaseCacheSize }}).

    - name: 'Auto disabled | verify | auto-generated preference overwritten'
      ansible.builtin.assert:
        quiet: true
        that:
          - _plex_xml.HardwareDevicePath == '10de:1eb1:10de:12a0@0000:42:00.0'
        fail_msg: >
          ✘ HardwareDevicePath should have pre-configured value
          ({{ _plex_xml.HardwareDevicePath }}).
