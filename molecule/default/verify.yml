---
- name: 'Default | verify'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Default | verify | gather service status'
      ansible.builtin.service_facts:

    # Just confirm services, timers are working/active (r_pufky.deb.systemd)
    - name: 'Default | verify | assert plexmediaserver.service active'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"plexmediaserver.service" in ansible_facts.services'
          - 'ansible_facts["services"]["plexmediaserver.service"]["state"] == "running"'  # yamllint disable-line rule:line-length
        fail_msg: '✘ plexmediaserver.service should be enabled and running.'

    - name: 'Default | verify | assert plex-update.service active'
      ansible.builtin.assert:
        quiet: true
        that:
          - '"plex-update.service" in ansible_facts.services'
        fail_msg: '✘ plex-update.service should be enabled.'

    - name: >
        Default | verify |
        /etc/systemd/system/plexmediaserver.service.d/override.conf
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'copy.yml'
      vars:
        test_name: >
          Default | verify |
          /etc/systemd/system/plexmediaserver.service.d/override.conf
        test_src: 'files/override.conf'
        test_file:
          '/etc/systemd/system/plexmediaserver.service.d/override.conf'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0644'

    - name: 'Default | verify | gather plex-update.timer status'
      ansible.builtin.command: 'systemctl status plex-update.timer'
      register: _test_plex_timer_status
      changed_when: false

    - name: 'Default | verify | assert plex-update.timer active'
      ansible.builtin.assert:
        quiet: true
        that:
          - _test_plex_timer_status.rc == 0
          - '"Active: active" in _test_plex_timer_status.stdout'
        fail_msg: '✘ plex-update.timer should be enabled.'

    - name: 'Default | verify | /etc/systemd/system/plex-update.timer'
      ansible.builtin.include_role:
        name: 'r_pufky.lib.tests'
        tasks_from: 'copy.yml'
      vars:
        test_name: 'Default | verify | /etc/systemd/system/plex-update.timer'
        test_src: 'files/plex-update.timer'
        test_file: '/etc/systemd/system/plex-update.timer'
        test_owner: 'root'
        test_group: 'root'
        test_mode: '0644'

    - name: 'Default | verify | query current plex configuration'
      community.general.xml:
        path: >
          /var/lib/plexmediaserver/Library/Application
          Support/Plex Media Server/Preferences.xml
        content: 'attribute'
        xpath: '/Preferences'
      register: _plex_xml_raw

    - name: 'Default | verify | parse current plex configuration'
      ansible.builtin.set_fact:
        _plex_xml: '{{ _plex_xml_raw.matches[0].Preferences }}'

    - name: 'Default | verify | DB auto grow size'
      ansible.builtin.assert:
        quiet: true
        that:
          - _plex_xml.DatabaseCacheSize == '44'
        fail_msg: >
          ✘ DatabaseCacheSize should grow to 44
          ({{ _plex_xml.DatabaseCacheSize }}).

    - name: 'Default | verify | auto-generated preference passed through'
      ansible.builtin.assert:
        quiet: true
        that:
          - _plex_xml.MachineIdentifier != ''
        fail_msg: >
          ✘ MachineIdentifier should have an auto-generated value ("")

    # stateful will override the user configured value
    - name: 'Default | verify | stateful preference passed through'
      ansible.builtin.assert:
        quiet: true
        that:
          - _plex_xml.AcceptedEULA == '1'
        fail_msg: >
          ✘ AcceptedEULA should be a stateful value (1)
          ({{ _plex_xml.AcceptedEULA }}).
