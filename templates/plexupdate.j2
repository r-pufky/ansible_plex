#!/bin/bash
#
# Update Plex server using entitlement token. An entitlement token without
# PlexPass will just return the latest public release. Must be run as root to
# install new packages.
#
# Exit Codes:
#   0: success - plex on most current release
#   1: failure - missing Preferences.xml
#   2: failure - incomplete download
#
# Reference:
# * https://github.com/linuxserver/docker-plex/blob/master/root/etc/s6-overlay/s6-rc.d/init-plex-update/run
# * https://github.com/mrworf/plexupdate

PLEX_URL_BASE="https://downloads.plex.tv/plex-media-server-new"
INSTALLED_VERSION=$(dpkg-query --show --showformat='${Version}' plexmediaserver)

if [ ! -e "{{ _plex_srv_application_support_dir._preferences }}" ]; then
  echo 'No preference file located: {{ _plex_srv_application_support_dir._preferences }}'
  exit 1
fi

PLEX_TOKEN=$( sed --silent 's/.*PlexOnlineToken="//p' "{{ _plex_srv_application_support_dir._preferences }}" | sed "s/\".*//")
if [ -z "$PLEX_TOKEN" ]; then
  PLEX_TOKEN='no-entitlement-token'  # ensure token defined for check
fi

REMOTE_VERSION=$(curl --silent "https://plex.tv/downloads/details/5?distro=debian&build=linux-{{ _plex_srv_arch_generic.raw }}&channel={{ _plex_cfg_butler_update_channel.raw }}&X-Plex-Token=${PLEX_TOKEN}"| grep --only-matching --perl-regexp 'version="\K[^"]+' | tail --lines 1 )
if [[ "$REMOTE_VERSION" == "$INSTALLED_VERSION" ]]; then
  exit 0
fi

PLEX_PKG="plexmediaserver_${REMOTE_VERSION}_{{ _plex_srv_arch.raw }}.deb"
PLEX_URL="${PLEX_URL_BASE}/${REMOTE_VERSION}/debian/${PLEX_PKG}"
PLEX_DEB="/tmp/${PLEX_PKG}"

rm -f /tmp/plexmediaserver_*.deb
curl --silent --output-dir /tmp -O "${PLEX_URL}"
last=$?

# Verify non-partial download
if [[ "${last}" -gt "0" ]] || [[ $(stat --format %s "${PLEX_DEB}") -lt 10000 ]]; then
  echo 'Package download failed.'
  exit 2
else
  dpkg --install --force-confold "${PLEX_DEB}"
  systemctl restart plexmediaserver.service
  rm -f /tmp/plexmediaserver_*.deb
  exit 0
fi
