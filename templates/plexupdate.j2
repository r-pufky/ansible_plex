#!/bin/bash
#
# Update plex server with plexpass token if available.
#
# Reference:
# * https://github.com/linuxserver/docker-plex/blob/master/root/etc/cont-init.d/60-plex-update

if [ ! -e "{{ _plex_library_dir }}/Preferences.xml" ]; then
  echo 'No preference file located: {{ _plex_library_dir }}/Preferences.xml'
  exit 1
fi

PLEX_TOKEN=$( sed -n 's/.*PlexOnlineToken="//p' "{{ _plex_library_dir }}/Preferences.xml" | sed "s/\".*//")

# An entitlement token without plexpass will just return the latest public release.
if [ -z "$PLEX_TOKEN" ]; then
  echo 'Plex entitlement token not found'
  exit 2
fi

INSTALLED_VERSION=$(dpkg-query -W -f='${Version}' plexmediaserver)
REMOTE_VERSION=$(curl -s "https://plex.tv/downloads/details/5?distro=debian&build=linux-{{ plex_arch_generic }}&channel=8&X-Plex-Token=${PLEX_TOKEN}"| grep -oP 'version="\K[^"]+' | tail -n 1 )

if [[ "$REMOTE_VERSION" == "$INSTALLED_VERSION" ]]; then
  exit 0
fi

rm -f /tmp/plexmediaserver_*.deb
wget --no-verbose --directory-prefix=/tmp "https://downloads.plex.tv/plex-media-server-new/${REMOTE_VERSION}/debian/plexmediaserver_${REMOTE_VERSION}_{{ plex_arch }}.deb"
last=$?

# Verify non-partial download
if [[ "$last" -gt "0" ]] || [[ $(stat -c %s /tmp/plexmediaserver_"${REMOTE_VERSION}"_{{ plex_arch }}.deb) -lt 10000 ]]; then
  echo 'Package download failed.'
  exit 3
else
  dpkg -i --force-confold /tmp/plexmediaserver_"${REMOTE_VERSION}"_{{ plex_arch }}.deb
  systemctl restart plexmediaserver.service
  rm -f /tmp/plexmediaserver_*.deb
fi
